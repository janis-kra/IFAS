version: "3.4"
services:

  eventstore:
    image: eventstore/eventstore:release-4.1.0
    container_name: eventstore
    networks:
      - feedback-net

  eventstore-1:
    image: eventstore/eventstore:release-4.1.0
    container_name: eventstore-1
    environment:
      - EVENTSTORE_CLUSTER_SIZE=3
      - EVENTSTORE_CLUSTER_DNS=eventstore-cluster
    networks:
      feedback-net:
        aliases:
          - eventstore-cluster

  eventstore-2:
    image: eventstore/eventstore:release-4.1.0
    container_name: eventstore-2
    environment:
      - EVENTSTORE_CLUSTER_SIZE=3
      - EVENTSTORE_CLUSTER_DNS=eventstore-cluster
    networks:
      feedback-net:
        aliases:
          - eventstore-cluster

  eventstore-3:
    image: eventstore/eventstore:release-4.1.0
    container_name: eventstore-3
    environment:
      - EVENTSTORE_CLUSTER_SIZE=3
      - EVENTSTORE_CLUSTER_DNS=eventstore-cluster
    networks:
      feedback-net:
        aliases:
          - eventstore-cluster

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.1.1
    container_name: elasticsearch
    command: elasticsearch
    ulimits:
      memlock:
        soft: -1
        hard: -1
    environment:
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    volumes:
      - elasticdata:/usr/share/elasticsearch/data
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    networks:
      - feedback-net

  kibana:
    image: docker.elastic.co/kibana/kibana:6.1.1
    container_name: kibana
    ports:
      - 127.0.0.1:5601:5601
    volumes:
      - kibanadata:/usr/share/kibana/data
      - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml
    environment:
      - cluster.name=docker-cluster
    networks:
      - feedback-net

  evt-es-bridge:
    build: dotnet-event-elastic-bridge
    container_name: evt-es-bridge
    environment:
      - STREAM_URL=eventstore
      - ELASTIC_NAME=elasticsearch
      - EVENTSTORE_NAME=eventstore
      - USER=admin
      - PW=changeit
    networks:
      - feedback-net

  # nginx:
  #   image: nginx:1.13
  #   container_name: nginx
  #   ports:
  #     - 6601:6601
  #   volumes:
  #     - ./nginx/conf.d/:/etc/nginx/conf.d/
  #   networks:
  #     - feedback-net

  event-generator:
    build: event-generator
    container_name: event-generator
    environment:
      - EVENTSTORE_NAME=eventstore
    networks:
      - feedback-net


  # mattermost:

  db:
    build: ./mattermost-docker/db
    restart: unless-stopped
    volumes:
      - ./mattermost-docker/volumes/db/var/lib/postgresql/data:/var/lib/postgresql/data
      # - /etc/localtime:/etc/localtime:ro
    environment:
      - POSTGRES_USER=mmuser
      - POSTGRES_PASSWORD=mmuser_password
      - POSTGRES_DB=mattermost
    # uncomment the following to enable backup
    #  - AWS_ACCESS_KEY_ID=XXXX
    #  - AWS_SECRET_ACCESS_KEY=XXXX
    #  - WALE_S3_PREFIX=s3://BUCKET_NAME/PATH
    #  - AWS_REGION=us-east-1
    networks:
      - mattermost-net

  app:
    build:
      context: ./mattermost-docker/app
      args:
        - edition=team
    restart: unless-stopped
    volumes:
      - ./mattermost-docker/volumes/app/mattermost/config:/mattermost/config:rw
      - ./mattermost-docker/volumes/app/mattermost/data:/mattermost/data:rw
      - ./mattermost-docker/volumes/app/mattermost/logs:/mattermost/logs:rw
      # - /etc/localtime:/etc/localtime:ro
    environment:
      # set same as db credentials and dbname
      - MM_USERNAME=mmuser
      - MM_PASSWORD=mmuser_password
      - MM_DBNAME=mattermost
      # in case your config is not in default location
      #- MM_CONFIG=/mattermost/config/config.json
    networks:
      - mattermost-net

  web:
    build: ./mattermost-docker/web
    ports:
      - "80:80"
      - "443:443"
    restart: unless-stopped
    volumes:
      # This directory must have cert files if you want to enable SSL
      - ./volumes/web/cert:/cert:ro
      # - /etc/localtime:/etc/localtime:ro
    # Uncomment for SSL
    # environment:
    #  - MATTERMOST_ENABLE_SSL=true
    networks:
      - mattermost-net

volumes:
  elasticdata:
    driver: local
  kibanadata:
    driver: local

networks:
  feedback-net:
  mattermost-net:
